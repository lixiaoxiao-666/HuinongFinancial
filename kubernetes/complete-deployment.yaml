# 命名空间
apiVersion: v1
kind: Namespace
metadata:
  name: huinong-financial
  labels:
    name: huinong-financial

---
# 后端服务配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: huinong-financial
data:
  app.yaml: |
    server:
      port: 8080
      mode: release
    logging:
      level: info
      format: json

---
# 后端服务部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: huinong-backend
  namespace: huinong-financial
  labels:
    app: huinong-backend
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: huinong-backend
  template:
    metadata:
      labels:
        app: huinong-backend
        version: v1
    spec:
      containers:
      - name: backend
        image: huinong-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: GIN_MODE
          value: "release"
        - name: TZ
          value: "Asia/Shanghai"
        - name: CONFIG_PATH
          value: "/app/config"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
      volumes:
      - name: config-volume
        configMap:
          name: backend-config

---
# 后端服务Service
apiVersion: v1
kind: Service
metadata:
  name: huinong-backend
  namespace: huinong-financial
  labels:
    app: huinong-backend
spec:
  selector:
    app: huinong-backend
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  type: ClusterIP

---
# 前端Admin部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: huinong-admin
  namespace: huinong-financial
  labels:
    app: huinong-admin
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: huinong-admin
  template:
    metadata:
      labels:
        app: huinong-admin
        version: v1
    spec:
      containers:
      - name: admin
        image: huinong-admin:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: TZ
          value: "Asia/Shanghai"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
# 前端Admin Service
apiVersion: v1
kind: Service
metadata:
  name: huinong-admin
  namespace: huinong-financial
  labels:
    app: huinong-admin
spec:
  selector:
    app: huinong-admin
  ports:
  - port: 3001
    targetPort: 3001
    name: http
  type: ClusterIP

---
# 前端Users部署
apiVersion: apps/v1
kind: Deployment
metadata:
  name: huinong-users
  namespace: huinong-financial
  labels:
    app: huinong-users
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: huinong-users
  template:
    metadata:
      labels:
        app: huinong-users
        version: v1
    spec:
      containers:
      - name: users
        image: huinong-users:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: TZ
          value: "Asia/Shanghai"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
# 前端Users Service
apiVersion: v1
kind: Service
metadata:
  name: huinong-users
  namespace: huinong-financial
  labels:
    app: huinong-users
spec:
  selector:
    app: huinong-users
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  type: ClusterIP

---
# Ingress配置
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: huinong-ingress
  namespace: huinong-financial
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  ingressClassName: nginx
  rules:
  - host: huinong-admin.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: huinong-admin
            port:
              number: 3001
  - host: huinong-users.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: huinong-users
            port:
              number: 3000
  - host: huinong-api.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: huinong-backend
            port:
              number: 8080

---
# NodePort服务 - 用于外部访问
apiVersion: v1
kind: Service
metadata:
  name: huinong-admin-nodeport
  namespace: huinong-financial
  labels:
    app: huinong-admin
spec:
  type: NodePort
  selector:
    app: huinong-admin
  ports:
  - port: 3001
    targetPort: 3001
    nodePort: 30081
    name: http

---
apiVersion: v1
kind: Service
metadata:
  name: huinong-users-nodeport
  namespace: huinong-financial
  labels:
    app: huinong-users
spec:
  type: NodePort
  selector:
    app: huinong-users
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30080
    name: http

---
apiVersion: v1
kind: Service
metadata:
  name: huinong-backend-nodeport
  namespace: huinong-financial
  labels:
    app: huinong-backend
spec:
  type: NodePort
  selector:
    app: huinong-backend
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30082
    name: http 