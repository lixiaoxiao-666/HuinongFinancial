// 清除浮动
@mixin clearfix() {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// 文本截断
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 居中对齐
@mixin center($type: both) {
  position: absolute;
  
  @if $type == both {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $type == horizontal {
    left: 50%;
    transform: translateX(-50%);
  } @else if $type == vertical {
    top: 50%;
    transform: translateY(-50%);
  }
}

// Flex 布局快捷方式
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 响应式断点
@mixin responsive($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$screen-xs - 1px}) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: #{$screen-xs}) and (max-width: #{$screen-sm - 1px}) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: #{$screen-sm}) and (max-width: #{$screen-md - 1px}) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: #{$screen-md}) and (max-width: #{$screen-lg - 1px}) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: #{$screen-lg}) {
      @content;
    }
  }
}

// 卡片样式
@mixin card($padding: $spacing-lg, $shadow: $shadow-card) {
  background: $component-background;
  border-radius: $border-radius-lg;
  border: 1px solid $border-color;
  box-shadow: $shadow;
  padding: $padding;
  transition: box-shadow $transition-base;

  &:hover {
    box-shadow: $shadow-card-hover;
  }
}

// 按钮基础样式
@mixin button-base() {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 8px 16px;
  border: 1px solid transparent;
  border-radius: $border-radius-base;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  line-height: 1.5715;
  text-align: center;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-base;
  user-select: none;

  &:focus {
    outline: none;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }
}

// 按钮变体
@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover {
    @if $background == transparent {
      color: lighten($color, 10%);
      border-color: lighten($border, 10%);
    } @else {
      background-color: lighten($background, 5%);
      border-color: lighten($border, 5%);
    }
  }

  &:active {
    @if $background == transparent {
      color: darken($color, 10%);
      border-color: darken($border, 10%);
    } @else {
      background-color: darken($background, 5%);
      border-color: darken($border, 5%);
    }
  }
}

// 输入框样式
@mixin input-base() {
  display: inline-block;
  width: 100%;
  padding: 8px 12px;
  font-size: $font-size-base;
  line-height: 1.5715;
  color: $text-color;
  background-color: $component-background;
  border: 1px solid $border-color;
  border-radius: $border-radius-base;
  transition: all $transition-base;

  &:focus {
    border-color: $primary-color;
    box-shadow: 0 0 0 2px rgba($primary-color, 0.2);
    outline: none;
  }

  &:disabled {
    background-color: $background-color-light;
    color: $text-color-disabled;
    cursor: not-allowed;
  }

  &::placeholder {
    color: $text-color-disabled;
  }
}

// 表格样式
@mixin table-base() {
  width: 100%;
  border-collapse: collapse;
  background-color: $component-background;

  th,
  td {
    padding: 16px;
    text-align: left;
    border-bottom: 1px solid $border-color-split;
  }

  th {
    background-color: $background-color-light;
    font-weight: $font-weight-medium;
    color: $text-color;
  }

  tbody tr {
    transition: background-color $transition-fast;

    &:hover {
      background-color: $background-color-light;
    }
  }
}

// 加载动画
@mixin loading-spinner($size: 20px, $color: $primary-color) {
  width: $size;
  height: $size;
  border: 2px solid rgba($color, 0.3);
  border-top: 2px solid $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// 状态标签
@mixin status-tag($background, $color) {
  display: inline-flex;
  align-items: center;
  padding: 4px 8px;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
  line-height: 1;
  background-color: $background;
  color: $color;
  border-radius: $border-radius-sm;
}

// 工具提示
@mixin tooltip() {
  position: relative;
  cursor: help;

  &::before,
  &::after {
    position: absolute;
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    transition: opacity $transition-fast, visibility $transition-fast;
  }

  &::before {
    content: attr(data-tooltip);
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: 8px;
    padding: 8px 12px;
    font-size: $font-size-sm;
    line-height: 1.4;
    color: $text-color-inverse;
    background-color: rgba(0, 0, 0, 0.85);
    border-radius: $border-radius-base;
    white-space: nowrap;
    z-index: $z-index-tooltip;
  }

  &::after {
    content: "";
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    border: 4px solid transparent;
    border-top-color: rgba(0, 0, 0, 0.85);
    z-index: $z-index-tooltip;
  }

  &:hover::before,
  &:hover::after {
    visibility: visible;
    opacity: 1;
  }
} 